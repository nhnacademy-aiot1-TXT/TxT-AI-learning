name: Python Package using Conda

on:
    push:
      branches:
        - main
        - develop
    pull_request:
      branches:
        - main
        - develop
    schedule:
      - cron:  '0 * * * *'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "DB_URL=${{ secrets.DB_URL }}" >> .env
        echo "DB_TOKEN=${{ secrets.DB_TOKEN }}" >> .env
        echo "DB_ORG=${{ secrets.DB_ORG }}" >> .env
        echo "DB_BUCKET=${{ secrets.DB_BUCKET }}" >> .env
        echo "STORAGE_URL=${{ secrets.STORAGE_URL }}" >> .env
        echo "CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}" >> .env
        echo "AUTH_URL=${{ secrets.AUTH_URL }}" >> .env
        echo "TENANT_ID=${{ secrets.TENANT_ID }}" >> .env
        echo "USER_EMAIL=${{ secrets.USER_EMAIL }}" >> .env
        echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env

    - name: Docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }} .
        docker push ${{ secrets.DOCKER_REPO }}

    - name: execute shell script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script_stop: true
        script: |
          docker stop TxT-AI_learning || true
          docker rm -f TxT-AI_learning || true
          images=$(docker images ${{ secrets.DOCKER_REPO }} -q)
          docker pull ${{ secrets.DOCKER_REPO }}
          docker run -d --name TxT-AI_learning ${{ secrets.DOCKER_REPO }}

